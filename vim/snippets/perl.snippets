# #!/usr/bin/perl
snippet #! "#!"
#!/usr/bin/perl
endsnippet

# Hash Pointer
snippet . "."
=>
endsnippet

# Function
snippet sub "sub"
sub ${1:function_name} {
	${2:#body ...}
}
endsnippet

# Conditional
snippet if "if"
if (${1}) {
	${2:# body...}
}
endsnippet

# Conditional if..else
snippet ife "ife"
if (${1}) {
	${2:# body...}
}
else {
	${3:# else...}
}
endsnippet

# Conditional if..elsif..else
snippet ifee "ifee"
if (${1}) {
	${2:# body...}
}
elsif (${3}) {
	${4:# elsif...}
}
else {
	${5:# else...}
}
endsnippet

# Conditional One-line
snippet xif "xif"
${1:expression} if ${2:condition};${3}
endsnippet

# Unless conditional
snippet unless "unless"
unless (${1}) {
	${2:# body...}
}
endsnippet

# Unless conditional One-line
snippet xunless "xunless"
${1:expression} unless ${2:condition};${3}
endsnippet

# Try/Except
snippet eval "eval"
eval {
	${1:# do something risky...}
};
if ($@) {
	${2:# handle failure...}
}
endsnippet

# While Loop
snippet wh "wh"
while (${1}) {
	${2:# body...}
}
endsnippet

# While Loop One-line
snippet xwh "xwh"
${1:expression} while ${2:condition};${3}
endsnippet

# C-style For Loop
snippet cfor "cfor"
for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++}) {
	${4:# body...}
}
endsnippet

# For loop one-line
snippet xfor "xfor"
${1:expression} for @${2:array};${3}
endsnippet

# Foreach Loop
snippet for "for"
foreach my $${1:x} (@${2:array}) {
	${3:# body...}
}
endsnippet

# Foreach Loop One-line
snippet fore "fore"
${1:expression} foreach @${2:array};${3}
endsnippet

# Package
snippet cl "cl"
package ${1:ClassName};
use base qw(${2:ParentClass});
sub new {
	my $class = shift;
	$class = ref $class if ref $class;
	my $self = bless {}, $class;
	$self;
}
1;${3}
endsnippet

# Read File
snippet slurp "slurp"
my $${1:var};
{ local $/ = undef; local *FILE; open FILE, "<${2:file}"; $$1 = <FILE>; close FILE }${3}
endsnippet


